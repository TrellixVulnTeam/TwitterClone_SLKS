[{"/home/akash/Dev/TwitterClone/client/src/index.js":"1","/home/akash/Dev/TwitterClone/client/src/App.js":"2","/home/akash/Dev/TwitterClone/client/src/contexts/AuthContext.js":"3","/home/akash/Dev/TwitterClone/client/src/Pages/detail.js":"4","/home/akash/Dev/TwitterClone/client/src/Pages/logout.js":"5","/home/akash/Dev/TwitterClone/client/src/Pages/sigin.js":"6","/home/akash/Dev/TwitterClone/client/src/Pages/signup.js":"7","/home/akash/Dev/TwitterClone/client/src/Pages/home.js":"8","/home/akash/Dev/TwitterClone/client/src/components/profile.js":"9","/home/akash/Dev/TwitterClone/client/src/components/NavBar.js":"10","/home/akash/Dev/TwitterClone/client/src/components/singleTweet.js":"11","/home/akash/Dev/TwitterClone/client/src/components/modal.js":"12","/home/akash/Dev/TwitterClone/client/src/components/comment.js":"13","/home/akash/Dev/TwitterClone/client/src/components/retweet.js":"14","/home/akash/Dev/TwitterClone/client/src/components/tweet.js":"15","/home/akash/Dev/TwitterClone/client/src/components/TweetDetails.js":"16","/home/akash/Dev/TwitterClone/client/src/components/ThreadComments.js":"17","/home/akash/Dev/TwitterClone/client/src/contexts/ApiContent.js":"18","/home/akash/Dev/TwitterClone/client/src/components/discover.js":"19"},{"size":583,"mtime":1654364562711,"results":"20","hashOfConfig":"21"},{"size":1152,"mtime":1655656066778,"results":"22","hashOfConfig":"21"},{"size":3341,"mtime":1655655106102,"results":"23","hashOfConfig":"21"},{"size":6360,"mtime":1655762631051,"results":"24","hashOfConfig":"21"},{"size":575,"mtime":1655653253126,"results":"25","hashOfConfig":"21"},{"size":1437,"mtime":1655653492423,"results":"26","hashOfConfig":"21"},{"size":2079,"mtime":1652548999947,"results":"27","hashOfConfig":"21"},{"size":3618,"mtime":1655655058769,"results":"28","hashOfConfig":"21"},{"size":6609,"mtime":1655758424985,"results":"29","hashOfConfig":"21"},{"size":1738,"mtime":1655656113314,"results":"30","hashOfConfig":"21"},{"size":4515,"mtime":1655760297925,"results":"31","hashOfConfig":"21"},{"size":2032,"mtime":1654365201404,"results":"32","hashOfConfig":"21"},{"size":4399,"mtime":1654365849728,"results":"33","hashOfConfig":"21"},{"size":2831,"mtime":1654365823735,"results":"34","hashOfConfig":"21"},{"size":3465,"mtime":1655760025215,"results":"35","hashOfConfig":"21"},{"size":6389,"mtime":1653250471317,"results":"36","hashOfConfig":"21"},{"size":4885,"mtime":1654367662909,"results":"37","hashOfConfig":"21"},{"size":2028,"mtime":1655758095875,"results":"38","hashOfConfig":"21"},{"size":4137,"mtime":1655757300848,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"133e3eb",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"43"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"43"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"43"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"43"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"43"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},"/home/akash/Dev/TwitterClone/client/src/index.js",[],[],[],"/home/akash/Dev/TwitterClone/client/src/App.js",["114","115","116","117","118"],[],"import React from \"react\";\nimport {BrowserRouter as Router,Routes ,Route,Navigate} from \"react-router-dom\"\nimport Home from \"./Pages/home\";\nimport Signin from \"./Pages/sigin\";\nimport SignUp from \"./Pages/signup\";\nimport LogOut from \"./Pages/logout\";\n// TweetDetail\nimport {useState,useEffect,createContext } from \"react\";\nimport Detail from \"./Pages/detail\";\nimport Profile from \"./components/profile\";\nimport Discover from \"./components/discover\";\n\n// import { LoginContext } from \"./contexts/AuthContext\";\n\nfunction App() {\n  \n  const [isAuthenticated,setisAuthenticated]=useState()\n  const [user,setUser]=useState(\"\")\n  \n  \n  return(\n     <Router>\n    <Routes>\n  \n      <Route path=\"/\" element={<Home/>} />\n      <Route path=\"/signin\" element={user?<Navigate to='/'/>:<Signin/>} />\n      <Route path=\"/signup\" element={user?<Navigate to='/'/>:<SignUp/>} />\n      <Route path=\"/logout\" element={<LogOut/>} />\n      <Route path=\"/discover\" element={<Discover/>}/>\n      <Route exact path=\"/detail/:id\" element={<Detail/>} />\n      <Route exact path=\"/profile/:id\" element={<Profile/>} />\n    </Routes>\n    </Router> \n     \n  );\n}\n\nexport default App;\n","/home/akash/Dev/TwitterClone/client/src/contexts/AuthContext.js",["119","120","121","122","123"],[],"import { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\"\n// import { Navigate } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nexport const AuthContext = createContext();\nexport const AuthContextProvider = ({ children }) => {\n  //  localStorage.getItem('authToken')?jwt_decode((JSON.parse(localStorage.getItem('authToken'))).access):null\n  let [authToken, SetauthTokens] = useState(localStorage.getItem('authToken') ? JSON.parse(localStorage.getItem('authToken')) : null)\n  // const navigate = useNavigate();\n  let [user, Setuser] = useState(localStorage.getItem('authToken') ? jwt_decode((JSON.parse(localStorage.getItem('authToken'))).access) : null)\n  let [loading, Setloading] = useState(true)\n  let [tweetDetail,SettweetDetail]=useState(null)\n  let userLogin = async (e) => {\n    e.preventDefault()\n\n    console.log(e)\n    let username = e.target.username.value\n    let password = e.target.password.value\n    let data = { username, password }\n    \n    // console.log(data);\n    console.log(\"form submmitted\")\n    const response = await axios\n      .post(`http://127.0.0.1:8000/token/`, data, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      \n      \n      if (response.status === 200) {\n        let data1 = await response.data;\n      await SetauthTokens(data1)\n      await Setuser(jwt_decode(data1.access))\n      localStorage.setItem('authToken', JSON.stringify(data1))\n      // return <Navigate to='/' />\n    } else {\n      alert('Something went Wrong! :(')\n      // return <Navigate to='/signin' />\n    }\n    \n  }\n  let logout = () => {\n    SetauthTokens(null)\n    Setuser(null)\n    localStorage.removeItem('authToken')\n    // navigate(\"/\");\n  }\n  let updateToken = async () => {\n    console.log(\"Update Token\")\n    const response = await axios\n      .post(`http://127.0.0.1:8000/token/refresh/`, { 'refresh': authToken.refresh }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n    if (response.status === 200) {\n      let data1 = await response.data;\n      await SetauthTokens(data1)\n      await Setuser(jwt_decode(data1.access))\n      localStorage.setItem('authToken', JSON.stringify(data1))\n    } else {\n      logout()\n    }\n  }\n\n\n    const Detail_tweet=async (id)=>{\n        try{\n\n            const Response= await axios.get(`http://127.0.0.1:8000/detail/${id}/`,{\n                headers:{\n                    \"Content-Type\":\"application/json\",\n                    \"Authorization\":\"Bearer \"+String(authToken.access)\n                }\n            })\n            SettweetDetail(Response.data)\n        }catch(e){\n            console.log(e)\n        }\n    }\n  \n  let contextData = {\n    authToken: authToken,\n    user: user,\n    loginUser: userLogin,\n    logout: logout,\n    tweetDetail:tweetDetail,\n    SettweetDetail:SettweetDetail\n  }\n  const fourmintues = 1000 * 60 * 4\n\n  useEffect(() => {\n    // console.log(authToken.refresh)\n    let interval = setInterval(() => {\n      console.log(\"hii\")\n      if (authToken) {\n        updateToken()\n      }\n    }, 200000)\n    return () => clearInterval(interval)\n\n  }, [authToken, loading])\n  return (\n    <AuthContext.Provider\n      value={contextData}\n    >\n    {children}\n    </AuthContext.Provider>\n  );\n\n\n}\n\n\n","/home/akash/Dev/TwitterClone/client/src/Pages/detail.js",["124","125","126","127","128","129","130","131"],[],"/home/akash/Dev/TwitterClone/client/src/Pages/logout.js",["132","133","134"],[],"import React, { useEffect } from \"react\";\nimport axios from \"axios\"\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { useRoutes,useNavigate } from \"react-router-dom\";\nimport { ApiContext } from \"../contexts/ApiContent\";\nfunction LogOut() {\n  const { logout, authToken } = useContext(AuthContext)\n  const navigate = useNavigate();\n  const {getdata}=useContext(ApiContext)\n  useEffect(()=>{\n    logout()\n    getdata();\n    navigate(\"/signin\");\n  })\n  return (\n    <div>user is now logged Out</div>\n  );\n}\nexport default LogOut;","/home/akash/Dev/TwitterClone/client/src/Pages/sigin.js",["135","136","137","138","139","140"],[],"import React from \"react\";\nimport {useState,useEffect,useContext } from \"react\";\nimport axios from \"axios\"\nimport {Form,Container,Col,Row,Card,Button} from 'react-bootstrap'\n// import { LoginContext } from \"../contexts/AuthContext\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ApiContext } from \"../contexts/ApiContent\";\n\n\nfunction Signin(){\n    \n    // console.log(Auth)\n    \n    const [username,setUsername]=useState(\"\")\n    const [password,setPassword]=useState(\"\")\n    const {loginUser,user}=useContext(AuthContext)\n    const {getdata}=useContext(ApiContext)\n    const navigate = useNavigate(ApiContext);\n    if(user){\n      getdata();\n      navigate('/')\n    }\n    return (\n        \n      \n        <Form onSubmit={loginUser}>\n  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n    <Form.Label>Username</Form.Label>\n    <Form.Control type=\"text\" name=\"username\" value={username} onChange={(e)=>setUsername(e.target.value)} placeholder=\"Enter a Unique Username\" />\n    \n  </Form.Group>\n  \n  <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" name=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)} placeholder=\"Password\" />\n  </Form.Group>\n  \n  \n  <Button variant=\"primary\" type=\"submit\">\n    Submit\n  </Button>\n</Form>\n    \n    );\n}\n\nexport default Signin","/home/akash/Dev/TwitterClone/client/src/Pages/signup.js",["141","142","143","144","145","146"],[],"import React from \"react\";\nimport {useState,useEffect} from \"react\";\nimport axios from \"axios\"\nimport {Form,Container,Col,Row,Card,Button} from 'react-bootstrap'\n\nfunction SignUp(){\n    const [username,setUsername]=useState(\"\")\n    const [email,setEmail]=useState(\"\")\n    const [password1,setPassword1]=useState(\"\")\n    const [password2,setPassword2]=useState(\"\")\n\n    function handleSubmit(e){\n        // let productimg=URL.createObjectURL(imgUrl)\n        e.preventDefault()\n      let data={username,email,password1,password2}\n      console.log(data);\n      const myNewModel =  axios\n        .post(`http://127.0.0.1:8000/createuser/`, data, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n            },\n        }).then((res) => {\n        //   getdata();\n        //   setImage(null);\n        //   setContent(\"\");\n            return res;\n        }).catch((error) => {\n            return error.response;\n        });\n    }\n\n    return (\n        <Form>\n  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n    <Form.Label>Username</Form.Label>\n    <Form.Control type=\"text\" value={username} onChange={(e)=>setUsername(e.target.value)} placeholder=\"Enter a Unique Username\" />\n    \n  </Form.Group>\n  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n    <Form.Label>Username</Form.Label>\n    <Form.Control type=\"email\" value={email} onChange={(e)=>setEmail(e.target.value)} placeholder=\"Enter a Your Email\" />\n  </Form.Group>\n  <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" value={password1} onChange={(e)=>setPassword1(e.target.value)} placeholder=\"Password\" />\n  </Form.Group>\n  <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n    <Form.Label>Conffirm Password</Form.Label>\n    <Form.Control type=\"password\" value={password2} onChange={(e)=>setPassword2(e.target.value)} placeholder=\"Password\" />\n  </Form.Group>\n  \n  <Button variant=\"primary\" onClick={(e)=>handleSubmit(e)}>\n    Submit\n  </Button>\n</Form>\n    );\n}\n\nexport default SignUp","/home/akash/Dev/TwitterClone/client/src/Pages/home.js",["147","148","149","150"],[],"import React, { useEffect } from 'react';\nimport { Form, Container,Col,Row,Button } from 'react-bootstrap'\nimport { useState, useContext } from \"react\";\nimport axios from \"axios\"\nimport { useNavigate } from \"react-router-dom\";\nimport NavBar from '../components/NavBar';\nimport '../style.scss'\nimport Comment from '../components/comment';\nimport Retweet from '../components/retweet';\nimport Tweet from '../components/tweet';\nimport { AuthContext } from '../contexts/AuthContext';\nimport { ApiContext } from '../contexts/ApiContent';\nfunction Home() {\n  const navigate = useNavigate();\n  const [content, setContent] = useState(\"\")\n  const [image, setImage] = useState(null)\n  const { user, authToken, logout,SettweetDetail } = useContext(AuthContext)\n  const {data,getdata}=useContext(ApiContext);\n  \n  function handleimg(e) {\n    console.log(e.target.files[0])\n    setImage(e.target.files[0]);\n  }\n  function handleSubmit(e) {\n    e.preventDefault()\n    let data = { content, image }\n    console.log(data);\n    const myNewModel = axios\n      .post(`http://127.0.0.1:8000/createtweet/`, data, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          'Authorization': 'Bearer ' + String(authToken.access)\n        },\n      }).then((res) => {\n        getdata();\n        setImage(null);\n        setContent(\"\");\n        return res;\n      }).catch((error) => {\n        return error.response;\n      });\n  }\n\n  \n  if (data) {\n    console.log(data)\n  }\n  // if(!user){\n  //   console.log(\"hey\")\n  //   navigate(\"/signin\")\n  // }\n  useEffect(()=>{\n    if(!user){\n\n      navigate(\"/signin\")\n    }\n  },[])\n  return (\n    <Container className=\"App\">\n\n      <Row>\n        <Col>\n          <NavBar/>\n        </Col>\n        <Col xs={6}>\n          <h3 >Home</h3>\n          {/* {user && <h5>{user.username}</h5>} */}\n          {user && <Form style={{ width: \"100%\", margin: \"10px\" }}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Tweet Content</Form.Label>\n              <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Type here .....\" value={content} onChange={(e) => setContent(e.target.value)}>\n\n              </Form.Control>\n\n            </Form.Group>\n\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicfile\">\n              <Form.Label>Insert Image</Form.Label>\n              <Form.Control type=\"file\" accept=\"image/jpeg,image/png,image/gif\" onChange={(e) => handleimg(e)} />\n            </Form.Group>\n            <Button variant=\"primary\" className='btn' type=\"submit\" onClick={(e) => handleSubmit(e)}>\n              Tweet\n            </Button>\n          </Form>}\n\n\n\n          <div>\n\n            {data && data.map(({ image, content, id, likes,username,parent,is_retweet,is_reply,index }) => (\n              <div>\n              \n\n             {!parent&&<Tweet image={image} data={data} content={content} id={id} likes={likes} username={username} parent={parent} is_reply={is_reply} is_retweet={is_retweet}/>}\n              \n                \n             {parent&&is_retweet&&<Retweet data={data} image={image} content={content} id={id} likes={likes} username={username} parent={parent} is_reply={is_reply} is_retweet={is_retweet}/>}\n              \n             {parent&&is_reply&&<Comment data={data} image={image} content={content} id={id} likes={likes} username={username} parent={parent} is_reply={is_reply} is_retweet={is_retweet}/>}\n                \n              \n              </div>\n\n            ))}\n                    \n          </div>\n        </Col>\n        <Col>3 of 3</Col>\n      </Row>\n\n    </Container>\n\n  );\n}\n\nexport default Home;\n","/home/akash/Dev/TwitterClone/client/src/components/profile.js",["151","152","153","154","155","156","157","158","159"],[],"import \"./profile.scss\";\nimport axios from \"axios\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport NavBar from \"../components/NavBar\";\nimport { AuthContext } from \"../contexts/AuthContext\";\n// useParams\nimport Comment from \"./comment\";\nimport Retweet from \"./retweet\";\nimport Tweet from \"./tweet\";\nimport {\n    Col,\n    Row,Tabs,Tab,Button\n} from 'react-bootstrap'\nimport { useParams } from \"react-router-dom\";\n// import Tweet from \"../components/Tweet\";\nimport SingleTweet from \"../components/singleTweet\";\nimport '../style.scss'\nimport pic from \"../user-icon.png\";\nimport { ApiContext } from \"../contexts/ApiContent\";\nfunction Profile() {\n    const { id } = useParams()\n    const { authToken,user } = useContext(AuthContext)\n    const {getdata,following}=useContext(ApiContext)\n    const [data, Setdata] = useState()\n    const { content, setContent } = useState()\n    const [value, setValue] = React.useState(\"one\");\n    const handleChange = (event, newValue) => {\n        var element1 = document.getElementById(\"one\");\n        var element2 = document.getElementById(\"two\");\n        var element3 = document.getElementById(\"three\");\n        if (!element1.classList.contains(\"mystyle\")) {\n          element1.classList.toggle(\"mystyle\");\n        }\n        if (!element2.classList.contains(\"mystyle\")) {\n          element2.classList.toggle(\"mystyle\");\n        }\n        if (!element3.classList.contains(\"mystyle\")) {\n          element3.classList.toggle(\"mystyle\");\n        }\n        var element = document.getElementById(newValue);\n        element.classList.toggle(\"mystyle\");\n        setValue(newValue);\n      };\n    async function getData() {\n        try {\n\n            const Response = await axios.get(`http://127.0.0.1:8000/profile/${id}/`, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + String(authToken.access)\n                }\n            })\n            console.log(Response.data)\n            Setdata(Response.data)\n\n        } catch (e) {\n            console.log(e)\n        }\n    }\n    useEffect(() => {\n        getData()\n    }, [])\n    async function toggleFollower() {\n      try {\n            let data1=data['username']\n          const Response = await axios.post(`http://127.0.0.1:8000/toggleFollower/`,{data1}, {\n              headers: {\n                  \"Content-Type\": \"application/json\",\n                  \"Authorization\": \"Bearer \" + String(authToken.access)\n              }\n          })\n          getdata();\n          console.log(Response.data)\n          // Setdata(Response.data)\n\n      } catch (e) {\n          console.log(e)\n      }\n  }\n\n    if (data) {\n        console.log(data['0'])\n    }\n\n    return (\n        <Row>\n        <Col>\n          <NavBar/>\n        </Col>\n        <Col xs={6}>\n            {data && <div>\n                <div className=\"profile\">\n        {/* <Sidebar /> */}\n        <div className=\"profileRight\">\n          <div className=\"profileRightTop\">\n            <div className=\"profileCover\">\n              <img\n                className=\"profileCoverImg\"\n                src={'https://images.unsplash.com/photo-1530305408560-82d13781b33a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1352&q=80'}\n\n                alt=\"\"\n              />\n              {data['profileImg']? <img\n                className=\"profileUserImg\"\n                src={`http://127.0.0.1:8000${data['profileImg']}/`}\n                alt=\"\"\n              />:<img className=\"profileUserImg\" src={pic}/>}\n             \n            </div>\n\n            <div style={{ height: \"20px\" }}></div>\n            <div className=\"profileInfo\">\n              <h4 className=\"profileInfoName\">{data['username']}</h4>\n              <span className=\"profileInfoDesc\">This is my discription for you to read</span>\n              {user&&following&&user['username']!=data['username']&&<Button variant=\"outline-primary\" size=\"lg\" onClick={toggleFollower}>{following.has(data['username'])?<>UnFollow</>:<>Follow</>}</Button>}\n              {user&&user['username']==data['username']&&<Button variant=\"outline-primary\" size=\"lg\">Edit Profile</Button>}\n            </div>\n            <div>\n            </div>\n            \n          </div>\n          <div>\n           \n  <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\" className=\"m-3 justify-content-center\" >\n  <Tab eventKey=\"home\" title=\"My Post\">\n  {data['ownTweet'] && data['ownTweet'].map(({ image, content, id, likes,username,parent,is_retweet,is_reply,index }) => (\n              <div>\n              \n\n             {!parent&&<Tweet image={image} data={data['ownTweet']} content={content} id={id} likes={likes} username={username} parent={parent} is_reply={is_reply} is_retweet={is_retweet}/>}\n              \n                \n             {parent&&is_retweet&&<Retweet data={data['ownTweet']} image={image} content={content} id={id} likes={likes} username={username} parent={parent} is_reply={is_reply} is_retweet={is_retweet}/>}\n              \n             {parent&&is_reply&&<Comment data={data['ownTweet']} image={image} content={content} id={id} likes={likes} username={username} parent={parent} is_reply={is_reply} is_retweet={is_retweet}/>}\n                \n              \n              </div>\n\n            ))}\n  </Tab>\n  <Tab eventKey=\"profile\" title=\"Liked Post\">\n  {data['likedTweet'] && data['likedTweet'].map(({ image, content, id, likes,username,parent,is_retweet,is_reply,index }) => (\n              <div>\n              \n            \n             {!parent&&<Tweet image={image} data={data['likedTweet']} content={content} id={id} likes={likes} username={username} parent={parent} is_reply={is_reply} is_retweet={is_retweet}/>}\n              \n                \n             {parent&&is_retweet&&<Retweet data={data['likedTweet']} image={image} content={content} id={id} likes={likes} username={username} parent={parent} is_reply={is_reply} is_retweet={is_retweet}/>}\n              \n             {parent&&is_reply&&<Comment data={data['likedTweet']} image={image} content={content} id={id} likes={likes} username={username} parent={parent} is_reply={is_reply} is_retweet={is_retweet}/>}\n                \n              \n              </div>\n\n            ))}\n  </Tab>\n  <Tab eventKey=\"contact\" title=\"About Me\" >\n    byeee\n  </Tab>\n</Tabs>\n          </div>\n          \n          <div className=\"profileRightBottom\">\n          </div>\n        </div>\n      </div>\n            </div>}\n        \n        </Col>\n        <Col>\n            \n        </Col>\n        </Row>\n    );\n}\n\n// export default TweetDetail\nexport default Profile","/home/akash/Dev/TwitterClone/client/src/components/NavBar.js",["160","161","162","163","164","165","166","167"],[],"import { Link} from \"react-router-dom\";\nimport { Form, \n    Container,\n     Col,\n      Row,\n       Card, Nav, Navbar, ButtonGroup,Modal,Button } from 'react-bootstrap'\n       import { AuthContext } from '../contexts/AuthContext';\nimport { useContext } from \"react\";\n\nfunction NavBar(){\n    const { user } = useContext(AuthContext)\n    return(<div className='vertical-nav'>\n    <Nav defaultActiveKey=\"/home\" className=\"flex-column\">\n      <Navbar.Brand style={{ fontSize: \"30px\", margin: \"10px\" }}>My Tweet</Navbar.Brand>\n      <Nav.Item style={{ fontSize: \"30px\", margin: \"10px\" }}><Link style={{ textDecoration: \"none\" }} to=\"/\"><i class=\"bi bi-house\"></i> Home</Link> </Nav.Item>\n      <Nav.Item eventKey=\"disabled\" style={{ fontSize: \"30px\", margin: \"10px\",display:\"block\" }}>\n        <span><i class=\"bi bi-chat-left-text\"></i> Messages</span>\n      </Nav.Item>\n      <Nav.Item eventKey=\"disabled\" style={{ fontSize: \"30px\", margin: \"10px\" }}>\n        <i class=\"bi bi-person\"></i> {user?<Link style={{ textDecoration: \"none\" }} to ={`/profile/${user['username']}`}>Profile </Link>:<Link style={{ textDecoration: \"none\" }} to={'/profile/notLogin'}>Profile</Link>}\n      </Nav.Item>\n      <Nav.Item eventKey=\"link-1\" style={{ fontSize: \"30px\", margin: \"10px\" }}>{user ? <Link style={{ textDecoration: \"none\" }} to=\"/logout\" ><i class=\"bi bi-box-arrow-left\"></i> Logout</Link> : <Link style={{ textDecoration: \"none\" }} to=\"/signin\"><i class=\"bi bi-box-arrow-in-right\"></i> Login</Link>} </Nav.Item>\n      <Nav.Item eventKey=\"link-2\" style={{ fontSize: \"30px\", margin: \"10px\" }}><Link style={{ textDecoration: \"none\" }} to=\"/discover\"><i class=\"bi bi-search\"></i> Discover</Link></Nav.Item>\n    </Nav>\n\n  </div>);\n}\n\nexport default NavBar","/home/akash/Dev/TwitterClone/client/src/components/singleTweet.js",["168","169","170","171","172","173","174","175"],[],"/home/akash/Dev/TwitterClone/client/src/components/modal.js",["176"],[],"import React from 'react';\nimport { useState, useContext } from \"react\";\nimport { Form, Card, Modal, Button } from 'react-bootstrap'\nimport axios from 'axios';\nimport { AuthContext } from '../contexts/AuthContext';\nimport { ApiContext } from '../contexts/ApiContent';\n\n\nfunction MyVerticallyCenteredModal(props) {\n  const { authToken } = useContext(AuthContext)\n  const { getdata } = useContext(ApiContext)\n  var result;\n  if (props.data && props.id) {\n    result = props.data.filter(obj => {\n      return obj.id === props.id\n    })\n\n    console.log(result['0']['id'])\n  }\n  const [content, setContent] = useState()\n\n  async function handleClick() {\n    try {\n      let data = { content }\n      console.log(data)\n      const response = await axios.post(`http://127.0.0.1:8000/reply/${result['0']['id']}/`, data, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          'Authorization': \"Bearer \" + String(authToken.access)\n        }\n      })\n      getdata();\n    } catch (e) {\n      console.log(e)\n    }\n    props.onHide()\n\n  }\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Reply\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {result && <Card style={{ width: \"100%\", margin: \"10px\" }} className='card'>\n          <Card.Body>\n            <Card.Title>{result['0']['user']}</Card.Title>\n            {result['0']['content'] && <Card.Text>\n              {result['0']['content']}\n            </Card.Text>}\n            <Form.Control style={{ border: \"none\" }} value={content} onChange={(e) => setContent(e.target.value)} as=\"textarea\" placeholder=\"Tweet Your Reply\" rows={3} autoFocus />\n\n          </Card.Body>\n        </Card>}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={handleClick}>Reply</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default MyVerticallyCenteredModal","/home/akash/Dev/TwitterClone/client/src/components/comment.js",["177","178","179"],[],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Card, ButtonGroup,Button } from 'react-bootstrap'\nimport { Link} from \"react-router-dom\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport axios from \"axios\";\nimport { ApiContext } from \"../contexts/ApiContent\";\nimport MyVerticallyCenteredModal from '../components/modal';\nfunction Comment(props) {\n    const { authToken } = useContext(AuthContext)\n    const {getdata}=useContext(ApiContext)\n    const [modalShow, setModalShow] = useState(false);\n    const [clickObjId, setclickObjId] = useState(null);\n    async function handleLike(id) {\n        try {\n\n            let response = await axios.get(`http://127.0.0.1:8000/like/${id}/`, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + String(authToken.access)\n                }\n            })\n            getdata();\n        } catch (e) {\n            console.log(e)\n        }\n    }\n    async function handleretweet(id) {\n        try {\n\n            let response = await axios.post(`http://127.0.0.1:8000/retweet/${id}/`, {}, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + String(authToken.access)\n                }\n            })\n            getdata();\n        } catch (e) {\n            console.log(e)\n        }\n    }\n    function handlereply(id) {\n        setclickObjId(id);\n        setModalShow(true);\n        \n    }\n\n    return (\n        <div>\n            {props.parent && props.parent['is_reply'] && <Card>\n                <Link to={`/detail/${props.id}` }style={{textDecoration:\"none\"}}>\n                <Card.Body>\n\n                    <Card.Title><Link to={`/profile/${props.username}`}>{props.username}</Link></Card.Title>\n                    <span style={{ color: \"grey\" }}>Replying to <Link to={`/profile/${props.parent['username']}`}>{props.parent['username']}</Link></span>\n\n                    {props.content && <Card.Text>\n                        {props.content}\n                    </Card.Text>}\n                </Card.Body>\n                </Link>\n                <ButtonGroup aria-label=\"Basic example\" className='btn-grp' >\n                <Button className='btn tweetbtn like' onClick={() => handleLike(props.id)}>{props.likes} <i class=\"bi bi-heart\"></i></Button>\n                    <Button className='btn tweetbtn retweet' onClick={() => handleretweet(props.id)}><i class=\"bi bi-arrow-repeat\"></i></Button>\n                    {/* <Button className='btn tweetbtn reply' onClick={() => { handlereply(props.data['0']['parent']['id']) }}><i class=\"bi bi-reply\"></i></Button> */}\n                    <Button className='btn tweetbtn share' ><i class=\"bi bi-share\"></i></Button>\n                </ButtonGroup>\n            </Card>}\n            {props.parent && !props.parent['is_reply'] && <Card>\n            <Link to={`/detail/${props.id}` } style={{textDecoration:\"none\",color:\"black\"}}>\n\n                <Card.Body>\n                    <Card.Title><Link to={`/profile/${props.username}`}>{props.username}</Link></Card.Title>\n                    <span style={{ color: \"grey\" }}>Replying to <Link to={`/profile/${props.parent['username']}`}>{props.parent['username']}</Link></span>\n                    {props.content && <Card.Text>\n                        {props.content}\n                    </Card.Text>}\n                </Card.Body>\n            </Link>\n                <ButtonGroup aria-label=\"Basic example\" className='btn-grp' >\n                    <Button className='btn tweetbtn like' onClick={() => handleLike(props.id)}>{props.likes} <i class=\"bi bi-heart\"></i></Button>\n                    <Button className='btn tweetbtn retweet' onClick={() => handleretweet(props.id)}><i class=\"bi bi-arrow-repeat\"></i></Button>\n                    <Button className='btn tweetbtn reply' onClick={() => { handlereply(props.id) }}><i class=\"bi bi-reply\"></i></Button>\n                    <Button className='btn tweetbtn share' ><i class=\"bi bi-share\"></i></Button>\n                </ButtonGroup>\n            </Card>}\n            {clickObjId && <MyVerticallyCenteredModal\n                show={modalShow}\n                onHide={() => setModalShow(false)}\n                data={props.data}\n                id={clickObjId}\n            />}\n        </div>\n    );\n}\n\nexport default Comment;","/home/akash/Dev/TwitterClone/client/src/components/retweet.js",["180","181","182","183","184"],[],"import React, { useState,useContext } from \"react\";\nimport { Card, ButtonGroup,Button } from 'react-bootstrap'\nimport { Link} from \"react-router-dom\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { ApiContext } from \"../contexts/ApiContent\";\nimport axios from \"axios\";\n\nfunction Retweet(props) {\n    const { authToken } = useContext(AuthContext)\n    const [modalShow, setModalShow] = useState(false);\n    const [clickObjId, setclickObjId] = useState(null);\n    const {getdata}=useContext(ApiContext)\n    async function handleLike(id) {\n        try {\n\n            let response = await axios.get(`http://127.0.0.1:8000/like/${id}/`, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + String(authToken.access)\n                }\n            })\n            getdata()\n        } catch (e) {\n            console.log(e)\n        }\n    }\n    async function handleretweet(id) {\n        try {\n\n            let response = await axios.post(`http://127.0.0.1:8000/retweet/${id}/`, {}, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + String(authToken.access)\n                }\n            })\n            getdata()\n        } catch (e) {\n            console.log(e)\n        }\n    }\n    function handlereply(id) {\n        setclickObjId(id);\n        setModalShow(true);\n        \n    }\n\n\n    return (\n        <div>\n             <Card>\n\n                    <Link to={`/detail/${props.id}` }style={{textDecoration:\"none\",color:\"black\"}}>\n                <Card.Body>\n                    <span style={{ color: \"grey\" }}>Retweeted by <Link to={`/profile/${props.username}`}>{props.username}</Link> </span>\n                    <Card.Title><Link to={`/profile/${props.parent['username']}`}>{props.parent['username']}</Link></Card.Title>\n                    {props.parent['content'] && <Card.Text>\n                        {props.parent['content']}\n                    </Card.Text>}\n                </Card.Body>\n                    </Link>\n                <ButtonGroup aria-label=\"Basic example\" className='btn-grp' >\n                    <Button className='btn tweetbtn like' onClick={() => handleLike(props.id)}>{props.likes} <i class=\"bi bi-heart\"></i></Button>\n                    <Button className='btn tweetbtn retweet' onClick={() => handleretweet(props.id)}><i class=\"bi bi-arrow-repeat\"></i></Button>\n                    {/* <Button className='btn tweetbtn reply' onClick={() => { handlereply(props.id) }}><i class=\"bi bi-reply\"></i></Button> */}\n                    <Button className='btn tweetbtn share' ><i class=\"bi bi-share\"></i></Button>\n                </ButtonGroup>\n            </Card>\n            \n            \n        </div>\n    );\n}\n\nexport default Retweet;","/home/akash/Dev/TwitterClone/client/src/components/tweet.js",["185","186","187","188","189","190","191"],[],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Card, ButtonGroup, Button } from 'react-bootstrap'\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport MyVerticallyCenteredModal from '../components/modal';\nimport axios from \"axios\";\nimport pic from \"../user-icon.png\";\nimport { ApiContext } from \"../contexts/ApiContent\";\n\nimport Linkify from 'linkify-react';\n\nimport * as linkify from 'linkifyjs';\nimport hashtag from 'linkifyjs/plugins/hashtag';\n\nfunction Tweet(props) {\n    const { authToken } = useContext(AuthContext)\n    const {getdata}=useContext(ApiContext)\n    const [modalShow, setModalShow] = useState(false);\n    const [clickObjId, setclickObjId] = useState(null);\n    var data=null;\n    var linkifyOptions = \n    {\n        formatHref: function (href, type) {\n          if (type === 'hashtag') {\n            href = 'https://twitter.com/hashtag/' + href.substring(1);\n          }\n          return href;\n        }\n      }\n    async function handleLike(id) {\n        try {\n\n            let response = await axios.get(`http://127.0.0.1:8000/like/${id}/`, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + String(authToken.access)\n                }\n            })\n            getdata();\n        } catch (e) {\n            console.log(e)\n        }\n    }\n    async function handleretweet(id) {\n        try {\n\n            let response = await axios.post(`http://127.0.0.1:8000/retweet/${id}/`, {}, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + String(authToken.access)\n                }\n            })\n            getdata();\n        } catch (e) {\n            console.log(e)\n        }\n    }\n    function handlereply(id) {\n        setclickObjId(id);\n        setModalShow(true);\n        \n    }\n\n    return (\n        <div>\n            <Card>\n            <Link to={`/detail/${props.id}` } style={{textDecoration:\"none\",color:\"black\"}}>\n                {props.image && <Card.Img variant=\"top\" src={`http://127.0.0.1:8000${props.image}`} />}\n                <Card.Body>\n                    <Card.Title><Link to={`/profile/${props.username}`}>{props.username}</Link></Card.Title>\n                    {props.content && <Card.Text>\n                        <Linkify options={linkifyOptions}>{props.content}</Linkify>\n                    </Card.Text>}\n                </Card.Body>\n                </Link>\n                <ButtonGroup aria-label=\"Basic example\" className='btn-grp' >\n                    <Button className='btn tweetbtn like' onClick={() => handleLike(props.id)}>{props.likes} <i class=\"bi bi-heart\"></i></Button>\n                    <Button className='btn tweetbtn retweet' onClick={() => handleretweet(props.id)}><i class=\"bi bi-arrow-repeat\"></i></Button>\n                    <Button className='btn tweetbtn reply' onClick={() => { handlereply(props.id) }}><i class=\"bi bi-reply\"></i></Button>\n                    <Button className='btn tweetbtn share' ><i class=\"bi bi-share\"></i></Button>\n                </ButtonGroup>\n            </Card>\n            {clickObjId && <MyVerticallyCenteredModal\n                show={modalShow}\n                onHide={() => setModalShow(false)}\n                data={props.data}\n                id={clickObjId}\n            />}\n\n        </div>\n    );\n}\n\nexport default Tweet;",[],"/home/akash/Dev/TwitterClone/client/src/components/TweetDetails.js",["192","193","194","195"],[],"/home/akash/Dev/TwitterClone/client/src/components/ThreadComments.js",["196","197","198","199","200","201"],[],"import React,{useState,useContext} from \"react\"\nimport { Card, ButtonGroup,Button } from 'react-bootstrap'\nimport { Link} from \"react-router-dom\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport axios from \"axios\";\nimport MyVerticallyCenteredModal from '../components/modal';\nimport '../style.scss'\nimport pic from \"../user-icon.png\";\nfunction ThreadComments(props){\n    const { authToken } = useContext(AuthContext)\n    \n    const [modalShow, setModalShow] = useState(false);\n    const [clickObjId, setclickObjId] = useState(null);\n    async function handleLike(id) {\n        try {\n\n            let response = await axios.get(`http://127.0.0.1:8000/like/${id}/`, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + String(authToken.access)\n                }\n            })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n    async function handleretweet(id) {\n        try {\n\n            let response = await axios.post(`http://127.0.0.1:8000/retweet/${id}/`, {}, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + String(authToken.access)\n                }\n            })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n    function handlereply(id) {\n        setclickObjId(id);\n        setModalShow(true);\n        \n    }\n    console.log(props.value)\n    return <div className=\"comments\">\n     <h3 className=\"comments-title\">Replies</h3>\n        {props.value && props.value.map(({ content, id, likes,username,children,parent,timeStamp }) => (\n            <div >\n           \n                <div className=\"comment\" >\n                    <div className=\"comment-image-container\">\n                        <img src={pic}></img>\n                    </div>\n                    <div className=\"comment-right-part\">\n                        <div className=\"comment-content\">\n                            <div className=\"comment-author\">{username}</div>\n                            \n\n                        </div>\n                        <div className=\"comment-text\">\n                            {content}\n                <ButtonGroup aria-label=\"Basic example\" style={{paddingLeft:\"10%\",paddingRight:\"10%\",width:\"100%\"}} >\n                    <Button className='btn tweetbtn like' onClick={() => handleLike(id)}>{likes} <i class=\"bi bi-heart\"></i></Button>\n                    <Button className='btn tweetbtn retweet' onClick={() => handleretweet(id)}><i class=\"bi bi-arrow-repeat\"></i></Button>\n                    <Button className='btn tweetbtn reply' onClick={() => { handlereply(id) }}><i class=\"bi bi-reply\"></i></Button>\n                    <Button className='btn tweetbtn share' ><i class=\"bi bi-share\"></i></Button>\n            </ButtonGroup>\n                        </div>\n                    </div>\n                   \n                </div>\n            \n\n            \n            {children&& children.map(({ content, id, likes,username,parent }) => (\n                <div className=\"replies\">\n                <div className=\"comments\">\n                <div className=\"comment\">\n                    <div className=\"comment-image-container\">\n                        <img src={pic}></img>\n                    </div>\n                    <div className=\"comment-right-part\">\n                        <div className=\"comment-content\">\n                            <div className=\"comment-author\">{username}</div>\n                            <div>{timeStamp}</div>\n\n                        </div>\n                        <div className=\"comment-text\">\n                            {content}\n                    <ButtonGroup aria-label=\"Basic example\" style={{paddingLeft:\"15%\",paddingRight:\"15%\",width:\"100%\"}} >\n                    <Button className='btn tweetbtn like' onClick={() => handleLike(id)}>{likes} <i class=\"bi bi-heart\"></i></Button>\n                    {/* <Button className='btn tweetbtn retweet' onClick={() => handleretweet(props.id)}><i class=\"bi bi-arrow-repeat\"></i></Button>\n                    <Button className='btn tweetbtn reply' onClick={() => { handlereply(props.id) }}><i class=\"bi bi-reply\"></i></Button> */}\n                    <Button className='btn tweetbtn share' ><i class=\"bi bi-share\"></i></Button>\n                    </ButtonGroup>\n                        </div>\n                    </div>\n                    \n                    </div>\n                </div>\n\n                \n                </div>\n            ))}\n                \n            \n            </div>\n        ))}\n        {clickObjId && <MyVerticallyCenteredModal\n                show={modalShow}\n                onHide={() => setModalShow(false)}\n                data={props.data}\n                id={clickObjId}\n            />}\n    </div>\n}\n\nexport default ThreadComments\n","/home/akash/Dev/TwitterClone/client/src/contexts/ApiContent.js",["202","203","204","205","206"],[],"import React,{useState,useEffect,createContext,useContext} from \"react\"\nimport axios from \"axios\";\nimport { AuthContext } from \"./AuthContext\";\nimport { useRoutes,useNavigate } from \"react-router-dom\";\n\nexport const ApiContext=createContext();\n\nexport const ApiContextProvider=({children})=>{\n    // const navigate = useNavigate();\n    const {user,authToken,logout}=useContext(AuthContext)\n    let [data,setData]=useState(null)\n    let [following,setFollower]=useState(null);\n    // let map = new Map({foo: 'bar'});\n    async function getdata() {\n        try {\n    \n          let response = await axios.get(`http://127.0.0.1:8000/`, {\n            headers: {\n              'Content-Type': 'application/json',\n              \"Authorization\": \"Bearer \" + String(authToken.access)\n            }\n          })\n          console.log(\"GetData Called!\")\n          setData(response.data['data'])\n          const objectToMap = obj => {\n            const keys = Object.keys(obj);\n            const map = new Map();\n            for(let i = 0; i < keys.length; i++){\n               //inserting new key value pair inside map\n               map.set(keys[i], obj[keys[i]]);\n            };\n            return map;\n         };\n          // map=new Map(response.data['following'])\n          \n          setFollower(objectToMap(response.data['following']))\n          console.log(following)\n\n        } catch (e) {\n          if(e.response.status==401){\n            logout()\n          }\n          console.log(e.response.status)\n          \n          \n            alert(e.message)\n          \n        }\n      }\n    useEffect(()=>{\n        getdata()\n    },[])\n    let contextData = {\n        data:data,\n        getdata:getdata,\n        following:following,\n        // setFollower:setFollower\n    }\n    if(following){\n      contextData[data]=data;\n      contextData[following]=following\n      // console.log(following)\n    }\n    return (\n        <ApiContext.Provider value={contextData}>\n        \n            {children}\n        </ApiContext.Provider>\n    )\n}\n","/home/akash/Dev/TwitterClone/client/src/components/discover.js",["207","208","209","210","211","212","213","214","215","216"],[],"import React,{useState,useEffect, useContext} from \"react\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { Form, Container,Col,Row,Button } from 'react-bootstrap'\nimport SearchIcon from '@mui/icons-material/Search';\nimport axios from \"axios\";\nimport NavBar from \"./NavBar\";\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport FilledInput from '@mui/material/FilledInput';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport pic from \"../user-icon.png\";\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Checkbox from '@mui/material/Checkbox';\nimport Avatar from '@mui/material/Avatar';\nimport { useRoutes,useNavigate } from \"react-router-dom\";\nexport default function Discover(){\n    const [data,setData]=useState(null)\n    const [search,setSearch]=useState(null)\n    const [values,setValues]=useState('')\n    const {authToken,logout}=useContext(AuthContext)\n    const navigate = useNavigate();\n    let ind=0;\n    let searchResult=new Map();\n    async function getdata() {\n        try {\n    \n          let response = await axios.get(`http://127.0.0.1:8000/discover/`, {\n            headers: {\n              'Content-Type': 'application/json',\n              \"Authorization\": \"Bearer \" + String(authToken.access)\n            }\n          })\n        //   console.log(\"GetData Called!\")\n        console.log(response.data['allUser'])\n          setData(response.data['allUser'].sort())\n          setSearch(response.data['allUser'].sort())\n\n        } catch (e) {\n          if(e.response.status==401){\n            logout()\n          }\n          console.log(e.response.status)\n          \n          \n            alert(e.message)\n          \n        }\n      }\n      function handleChange(e){\n        // console.log(e.target.value);\n        let str=e.target.value;\n        let arr=[]\n        for(let i=ind;i<data.length;i++){\n            if(data[i].length>=str.length){\n              let str1=data[i].substring(0, str.length)\n              if(str1==str){\n                arr.push(data[i]);\n              }\n            }\n            else{\n              if(arr.length>0){\n                break;\n\n              }else{\n                ind++;\n              }\n            }\n            if(arr.length==5){\n              break;\n            }\n        }\n        setSearch(arr)\n        \n\n        setValues(e.target.value)\n      }\n      function handleClick(value){\n        navigate(`/profile/${value}`)\n      }\n      useEffect(()=>{\n        getdata();\n      },[])\n    return (\n      <Container className=\"App\">\n      \n\n      <Row>\n        <Col>\n          <NavBar/>\n        </Col>\n        <Col xs={6}>\n          <h3 >Discover!</h3>\n          <FormControl fullWidth sx={{ m: 1 }}>\n          <InputLabel htmlFor=\"outlined-adornment-amount\">Search</InputLabel>\n          <OutlinedInput\n            id=\"outlined-adornment-amount\"\n            value={values}\n            onChange={handleChange}\n            startAdornment={<InputAdornment position=\"start\"><SearchIcon/></InputAdornment>}\n            label=\"Amount\"\n          />\n        </FormControl>\n        <List dense sx={{ width: '100%', bgcolor: 'background.paper' }}>\n      {search&&search.map((value) => {\n        const labelId = `checkbox-list-secondary-label-${value}`;\n        return (\n          <ListItem\n            key={value}\n            disablePadding\n          >\n            <ListItemButton onClick={()=>handleClick(value)}>\n              <ListItemAvatar>\n                <Avatar\n                  alt={`Avatar n°`}\n                  src={pic}\n                />\n              </ListItemAvatar>\n              <ListItemText id={labelId} primary={value} />\n            </ListItemButton>\n          </ListItem>\n        );\n      })}\n    </List>\n        \n          \n        </Col>\n        <Col>3 of 3</Col>\n      </Row>\n\n    </Container>\n    )\n}",{"ruleId":"217","severity":1,"message":"218","line":8,"column":18,"nodeType":"219","messageId":"220","endLine":8,"endColumn":27},{"ruleId":"217","severity":1,"message":"221","line":8,"column":28,"nodeType":"219","messageId":"220","endLine":8,"endColumn":41},{"ruleId":"217","severity":1,"message":"222","line":17,"column":10,"nodeType":"219","messageId":"220","endLine":17,"endColumn":25},{"ruleId":"217","severity":1,"message":"223","line":17,"column":26,"nodeType":"219","messageId":"220","endLine":17,"endColumn":44},{"ruleId":"217","severity":1,"message":"224","line":18,"column":15,"nodeType":"219","messageId":"220","endLine":18,"endColumn":22},{"ruleId":"217","severity":1,"message":"225","line":4,"column":10,"nodeType":"219","messageId":"220","endLine":4,"endColumn":21},{"ruleId":"217","severity":1,"message":"226","line":12,"column":17,"nodeType":"219","messageId":"220","endLine":12,"endColumn":27},{"ruleId":"217","severity":1,"message":"227","line":69,"column":11,"nodeType":"219","messageId":"220","endLine":69,"endColumn":23},{"ruleId":"217","severity":1,"message":"228","line":92,"column":9,"nodeType":"219","messageId":"220","endLine":92,"endColumn":20},{"ruleId":"229","severity":1,"message":"230","line":104,"column":6,"nodeType":"231","endLine":104,"endColumn":26,"suggestions":"232"},{"ruleId":"217","severity":1,"message":"233","line":15,"column":13,"nodeType":"219","messageId":"220","endLine":15,"endColumn":20},{"ruleId":"217","severity":1,"message":"234","line":16,"column":8,"nodeType":"219","messageId":"220","endLine":16,"endColumn":15},{"ruleId":"217","severity":1,"message":"235","line":53,"column":19,"nodeType":"219","messageId":"220","endLine":53,"endColumn":27},{"ruleId":"229","severity":1,"message":"236","line":74,"column":8,"nodeType":"231","endLine":74,"endColumn":10,"suggestions":"237"},{"ruleId":"217","severity":1,"message":"235","line":82,"column":17,"nodeType":"219","messageId":"220","endLine":82,"endColumn":25},{"ruleId":"217","severity":1,"message":"235","line":97,"column":17,"nodeType":"219","messageId":"220","endLine":97,"endColumn":25},{"ruleId":"238","severity":1,"message":"239","line":122,"column":25,"nodeType":"240","endLine":122,"endColumn":40},{"ruleId":"238","severity":1,"message":"239","line":130,"column":51,"nodeType":"240","endLine":130,"endColumn":149},{"ruleId":"217","severity":1,"message":"241","line":2,"column":8,"nodeType":"219","messageId":"220","endLine":2,"endColumn":13},{"ruleId":"217","severity":1,"message":"242","line":5,"column":10,"nodeType":"219","messageId":"220","endLine":5,"endColumn":19},{"ruleId":"217","severity":1,"message":"243","line":8,"column":19,"nodeType":"219","messageId":"220","endLine":8,"endColumn":28},{"ruleId":"217","severity":1,"message":"218","line":2,"column":18,"nodeType":"219","messageId":"220","endLine":2,"endColumn":27},{"ruleId":"217","severity":1,"message":"241","line":3,"column":8,"nodeType":"219","messageId":"220","endLine":3,"endColumn":13},{"ruleId":"217","severity":1,"message":"244","line":4,"column":14,"nodeType":"219","messageId":"220","endLine":4,"endColumn":23},{"ruleId":"217","severity":1,"message":"245","line":4,"column":24,"nodeType":"219","messageId":"220","endLine":4,"endColumn":27},{"ruleId":"217","severity":1,"message":"246","line":4,"column":28,"nodeType":"219","messageId":"220","endLine":4,"endColumn":31},{"ruleId":"217","severity":1,"message":"247","line":4,"column":32,"nodeType":"219","messageId":"220","endLine":4,"endColumn":36},{"ruleId":"217","severity":1,"message":"218","line":2,"column":18,"nodeType":"219","messageId":"220","endLine":2,"endColumn":27},{"ruleId":"217","severity":1,"message":"244","line":4,"column":14,"nodeType":"219","messageId":"220","endLine":4,"endColumn":23},{"ruleId":"217","severity":1,"message":"245","line":4,"column":24,"nodeType":"219","messageId":"220","endLine":4,"endColumn":27},{"ruleId":"217","severity":1,"message":"246","line":4,"column":28,"nodeType":"219","messageId":"220","endLine":4,"endColumn":31},{"ruleId":"217","severity":1,"message":"247","line":4,"column":32,"nodeType":"219","messageId":"220","endLine":4,"endColumn":36},{"ruleId":"217","severity":1,"message":"248","line":17,"column":13,"nodeType":"219","messageId":"220","endLine":17,"endColumn":23},{"ruleId":"217","severity":1,"message":"249","line":17,"column":28,"nodeType":"219","messageId":"220","endLine":17,"endColumn":34},{"ruleId":"217","severity":1,"message":"250","line":17,"column":35,"nodeType":"219","messageId":"220","endLine":17,"endColumn":49},{"ruleId":"217","severity":1,"message":"248","line":28,"column":11,"nodeType":"219","messageId":"220","endLine":28,"endColumn":21},{"ruleId":"229","severity":1,"message":"251","line":57,"column":5,"nodeType":"231","endLine":57,"endColumn":7,"suggestions":"252"},{"ruleId":"217","severity":1,"message":"253","line":16,"column":8,"nodeType":"219","messageId":"220","endLine":16,"endColumn":19},{"ruleId":"217","severity":1,"message":"254","line":25,"column":13,"nodeType":"219","messageId":"220","endLine":25,"endColumn":20},{"ruleId":"217","severity":1,"message":"255","line":25,"column":22,"nodeType":"219","messageId":"220","endLine":25,"endColumn":32},{"ruleId":"217","severity":1,"message":"256","line":26,"column":12,"nodeType":"219","messageId":"220","endLine":26,"endColumn":17},{"ruleId":"217","severity":1,"message":"257","line":27,"column":11,"nodeType":"219","messageId":"220","endLine":27,"endColumn":23},{"ruleId":"229","severity":1,"message":"236","line":62,"column":8,"nodeType":"231","endLine":62,"endColumn":10,"suggestions":"258"},{"ruleId":"238","severity":1,"message":"239","line":107,"column":18,"nodeType":"240","endLine":107,"endColumn":61},{"ruleId":"259","severity":1,"message":"260","line":115,"column":49,"nodeType":"261","messageId":"262","endLine":115,"endColumn":51},{"ruleId":"259","severity":1,"message":"263","line":116,"column":38,"nodeType":"261","messageId":"262","endLine":116,"endColumn":40},{"ruleId":"217","severity":1,"message":"264","line":2,"column":10,"nodeType":"219","messageId":"220","endLine":2,"endColumn":14},{"ruleId":"217","severity":1,"message":"244","line":3,"column":5,"nodeType":"219","messageId":"220","endLine":3,"endColumn":14},{"ruleId":"217","severity":1,"message":"245","line":4,"column":6,"nodeType":"219","messageId":"220","endLine":4,"endColumn":9},{"ruleId":"217","severity":1,"message":"246","line":5,"column":7,"nodeType":"219","messageId":"220","endLine":5,"endColumn":10},{"ruleId":"217","severity":1,"message":"247","line":6,"column":8,"nodeType":"219","messageId":"220","endLine":6,"endColumn":12},{"ruleId":"217","severity":1,"message":"265","line":6,"column":27,"nodeType":"219","messageId":"220","endLine":6,"endColumn":38},{"ruleId":"217","severity":1,"message":"266","line":6,"column":39,"nodeType":"219","messageId":"220","endLine":6,"endColumn":44},{"ruleId":"217","severity":1,"message":"267","line":6,"column":45,"nodeType":"219","messageId":"220","endLine":6,"endColumn":51},{"ruleId":"217","severity":1,"message":"218","line":3,"column":39,"nodeType":"219","messageId":"220","endLine":3,"endColumn":48},{"ruleId":"217","severity":1,"message":"268","line":10,"column":10,"nodeType":"219","messageId":"220","endLine":10,"endColumn":14},{"ruleId":"217","severity":1,"message":"269","line":10,"column":16,"nodeType":"219","messageId":"220","endLine":10,"endColumn":24},{"ruleId":"217","severity":1,"message":"233","line":14,"column":13,"nodeType":"219","messageId":"220","endLine":14,"endColumn":20},{"ruleId":"217","severity":1,"message":"234","line":15,"column":8,"nodeType":"219","messageId":"220","endLine":15,"endColumn":15},{"ruleId":"217","severity":1,"message":"235","line":33,"column":17,"nodeType":"219","messageId":"220","endLine":33,"endColumn":25},{"ruleId":"217","severity":1,"message":"235","line":48,"column":17,"nodeType":"219","messageId":"220","endLine":48,"endColumn":25},{"ruleId":"217","severity":1,"message":"235","line":64,"column":19,"nodeType":"219","messageId":"220","endLine":64,"endColumn":27},{"ruleId":"217","severity":1,"message":"235","line":26,"column":13,"nodeType":"219","messageId":"220","endLine":26,"endColumn":21},{"ruleId":"217","severity":1,"message":"218","line":1,"column":27,"nodeType":"219","messageId":"220","endLine":1,"endColumn":36},{"ruleId":"217","severity":1,"message":"235","line":16,"column":17,"nodeType":"219","messageId":"220","endLine":16,"endColumn":25},{"ruleId":"217","severity":1,"message":"235","line":30,"column":17,"nodeType":"219","messageId":"220","endLine":30,"endColumn":25},{"ruleId":"217","severity":1,"message":"270","line":10,"column":12,"nodeType":"219","messageId":"220","endLine":10,"endColumn":21},{"ruleId":"217","severity":1,"message":"271","line":11,"column":12,"nodeType":"219","messageId":"220","endLine":11,"endColumn":22},{"ruleId":"217","severity":1,"message":"235","line":16,"column":17,"nodeType":"219","messageId":"220","endLine":16,"endColumn":25},{"ruleId":"217","severity":1,"message":"235","line":30,"column":17,"nodeType":"219","messageId":"220","endLine":30,"endColumn":25},{"ruleId":"217","severity":1,"message":"272","line":41,"column":14,"nodeType":"219","messageId":"220","endLine":41,"endColumn":25},{"ruleId":"217","severity":1,"message":"218","line":1,"column":27,"nodeType":"219","messageId":"220","endLine":1,"endColumn":36},{"ruleId":"217","severity":1,"message":"273","line":7,"column":8,"nodeType":"219","messageId":"220","endLine":7,"endColumn":11},{"ruleId":"217","severity":1,"message":"233","line":12,"column":13,"nodeType":"219","messageId":"220","endLine":12,"endColumn":20},{"ruleId":"217","severity":1,"message":"234","line":13,"column":8,"nodeType":"219","messageId":"220","endLine":13,"endColumn":15},{"ruleId":"217","severity":1,"message":"274","line":20,"column":9,"nodeType":"219","messageId":"220","endLine":20,"endColumn":13},{"ruleId":"217","severity":1,"message":"235","line":33,"column":17,"nodeType":"219","messageId":"220","endLine":33,"endColumn":25},{"ruleId":"217","severity":1,"message":"235","line":47,"column":17,"nodeType":"219","messageId":"220","endLine":47,"endColumn":25},{"ruleId":"217","severity":1,"message":"218","line":3,"column":39,"nodeType":"219","messageId":"220","endLine":3,"endColumn":48},{"ruleId":"217","severity":1,"message":"235","line":16,"column":17,"nodeType":"219","messageId":"220","endLine":16,"endColumn":25},{"ruleId":"217","severity":1,"message":"235","line":37,"column":17,"nodeType":"219","messageId":"220","endLine":37,"endColumn":25},{"ruleId":"217","severity":1,"message":"235","line":58,"column":19,"nodeType":"219","messageId":"220","endLine":58,"endColumn":27},{"ruleId":"217","severity":1,"message":"247","line":2,"column":10,"nodeType":"219","messageId":"220","endLine":2,"endColumn":14},{"ruleId":"217","severity":1,"message":"268","line":3,"column":10,"nodeType":"219","messageId":"220","endLine":3,"endColumn":14},{"ruleId":"217","severity":1,"message":"235","line":17,"column":17,"nodeType":"219","messageId":"220","endLine":17,"endColumn":25},{"ruleId":"217","severity":1,"message":"235","line":30,"column":17,"nodeType":"219","messageId":"220","endLine":30,"endColumn":25},{"ruleId":"238","severity":1,"message":"239","line":53,"column":25,"nodeType":"240","endLine":53,"endColumn":40},{"ruleId":"238","severity":1,"message":"239","line":81,"column":25,"nodeType":"240","endLine":81,"endColumn":40},{"ruleId":"217","severity":1,"message":"242","line":4,"column":10,"nodeType":"219","messageId":"220","endLine":4,"endColumn":19},{"ruleId":"217","severity":1,"message":"225","line":4,"column":20,"nodeType":"219","messageId":"220","endLine":4,"endColumn":31},{"ruleId":"217","severity":1,"message":"275","line":10,"column":12,"nodeType":"219","messageId":"220","endLine":10,"endColumn":16},{"ruleId":"259","severity":1,"message":"263","line":40,"column":31,"nodeType":"261","messageId":"262","endLine":40,"endColumn":33},{"ruleId":"229","severity":1,"message":"276","line":52,"column":7,"nodeType":"231","endLine":52,"endColumn":9,"suggestions":"277"},{"ruleId":"217","severity":1,"message":"264","line":3,"column":10,"nodeType":"219","messageId":"220","endLine":3,"endColumn":14},{"ruleId":"217","severity":1,"message":"267","line":3,"column":34,"nodeType":"219","messageId":"220","endLine":3,"endColumn":40},{"ruleId":"217","severity":1,"message":"278","line":9,"column":8,"nodeType":"219","messageId":"220","endLine":9,"endColumn":19},{"ruleId":"217","severity":1,"message":"279","line":18,"column":8,"nodeType":"219","messageId":"220","endLine":18,"endColumn":16},{"ruleId":"217","severity":1,"message":"242","line":20,"column":10,"nodeType":"219","messageId":"220","endLine":20,"endColumn":19},{"ruleId":"217","severity":1,"message":"280","line":28,"column":9,"nodeType":"219","messageId":"220","endLine":28,"endColumn":21},{"ruleId":"259","severity":1,"message":"263","line":44,"column":31,"nodeType":"261","messageId":"262","endLine":44,"endColumn":33},{"ruleId":"259","severity":1,"message":"263","line":61,"column":22,"nodeType":"261","messageId":"262","endLine":61,"endColumn":24},{"ruleId":"259","severity":1,"message":"263","line":73,"column":26,"nodeType":"261","messageId":"262","endLine":73,"endColumn":28},{"ruleId":"229","severity":1,"message":"276","line":87,"column":9,"nodeType":"231","endLine":87,"endColumn":11,"suggestions":"281"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'createContext' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'setisAuthenticated' is assigned a value but never used.","'setUser' is assigned a value but never used.","'useNavigate' is defined but never used.","'Setloading' is assigned a value but never used.","'Detail_tweet' is assigned a value but never used.","'fourmintues' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateToken'. Either include it or remove the dependency array.","ArrayExpression",["282"],"'linkify' is defined but never used.","'hashtag' is defined but never used.","'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["283"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'axios' is defined but never used.","'useRoutes' is defined but never used.","'authToken' is assigned a value but never used.","'Container' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Card' is defined but never used.","'myNewModel' is assigned a value but never used.","'logout' is assigned a value but never used.","'SettweetDetail' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'navigate' and 'user'. Either include them or remove the dependency array.",["284"],"'SingleTweet' is defined but never used.","'content' is assigned a value but never used.","'setContent' is assigned a value but never used.","'value' is assigned a value but never used.","'handleChange' is assigned a value but never used.",["285"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'Form' is defined but never used.","'ButtonGroup' is defined but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","'Navigate' is defined but never used.","'modalShow' is assigned a value but never used.","'clickObjId' is assigned a value but never used.","'handlereply' is defined but never used.","'pic' is defined but never used.","'data' is assigned a value but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getdata'. Either include it or remove the dependency array.",["286"],"'FilledInput' is defined but never used.","'Checkbox' is defined but never used.","'searchResult' is assigned a value but never used.",["287"],{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"290","fix":"294"},{"desc":"295","fix":"296"},{"desc":"295","fix":"297"},"Update the dependencies array to be: [authToken, loading, updateToken]",{"range":"298","text":"299"},"Update the dependencies array to be: [getData]",{"range":"300","text":"301"},"Update the dependencies array to be: [navigate, user]",{"range":"302","text":"303"},{"range":"304","text":"301"},"Update the dependencies array to be: [getdata]",{"range":"305","text":"306"},{"range":"307","text":"306"},[3196,3216],"[authToken, loading, updateToken]",[2215,2217],"[getData]",[1611,1613],"[navigate, user]",[2146,2148],[1626,1628],"[getdata]",[2798,2800]]